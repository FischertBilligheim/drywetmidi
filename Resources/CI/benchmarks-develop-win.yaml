trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: Install NuGet tools

- task: NuGetCommand@2
  displayName: Restore packages
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build solution
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: Run benchmarks
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testSelector: testAssemblies
    testAssemblyVer2:
      '**/*.Benchmarks.dll'

- task: PowerShell@2
  displayName: Print results
  inputs:
    targetType: 'inline'
    script: |
      $directory = '$(Build.SourcesDirectory)\DryWetMidi.Benchmarks\bin\Release\BenchmarkDotNet.Artifacts\results'
      $fileNames = Get-ChildItem -Path "$directory\*.asciidoc" -Recurse -Force -Name
      Foreach ($name in $fileNames)
      {
      	$nameParts = $name.Split(".")
      	$nameKey = $nameParts[$nameParts.Length - 2]
      	Write-Host $nameKey
      	$content = [IO.File]::ReadAllText("$directory\$name")
      	$tableStart = $content.IndexOf("|===")
      	$table = $content.Substring($tableStart)
      	Write-Host $table
      }

- task: CopyFiles@2
  displayName: Copy results
  inputs:
    contents: '**/BenchmarkDotNet.Artifacts/**/*.*'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  displayName: Publish results
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: BenchmarksResults